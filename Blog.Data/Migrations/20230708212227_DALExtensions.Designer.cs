// <auto-generated />
using System;
using Blog.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230708212227_DALExtensions")]
    partial class DALExtensions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed183356-b8ce-4a88-bef9-c83d9d88e0ed"),
                            CategoryId = new Guid("01fa1372-98b1-476d-9fd5-7c3450d25139"),
                            Content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis semper ipsum, a viverra lacus. Sed eleifend rutrum ligula sed venenatis. Proin quis eros quis mauris euismod mollis. Fusce aliquet sem malesuada urna scelerisque dictum. Proin id odio non neque gravida facilisis. Donec molestie euismod dolor eu molestie. Vivamus dictum pulvinar dignissim. Proin blandit faucibus nulla. Donec dictum ante et massa congue commodo. Donec quis purus purus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Ut nec dolor id ante venenatis sagittis. Fusce id tortor tristique, posuere magna sed, gravida metus. Suspendisse potenti. Nam elementum pulvinar orci, tempus tristique ante tempus non.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 7, 9, 0, 22, 27, 185, DateTimeKind.Local).AddTicks(6132),
                            ImageId = new Guid("38681e98-5fd8-4ad5-b318-d658f8d05913"),
                            IsDeleted = false,
                            Title = "Asp.net core deneme makalesi",
                            ViewCount = 15
                        },
                        new
                        {
                            Id = new Guid("6d6de7bf-62f4-40cc-9f74-81c84aaa7fc9"),
                            CategoryId = new Guid("36d3c733-c838-4caa-a507-23287fbaf903"),
                            Content = "Visual Studio Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis semper ipsum, a viverra lacus. Sed eleifend rutrum ligula sed venenatis. Proin quis eros quis mauris euismod mollis. Fusce aliquet sem malesuada urna scelerisque dictum. Proin id odio non neque gravida facilisis. Donec molestie euismod dolor eu molestie. Vivamus dictum pulvinar dignissim. Proin blandit faucibus nulla. Donec dictum ante et massa congue commodo. Donec quis purus purus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Ut nec dolor id ante venenatis sagittis. Fusce id tortor tristique, posuere magna sed, gravida metus. Suspendisse potenti. Nam elementum pulvinar orci, tempus tristique ante tempus non.",
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 7, 9, 0, 22, 27, 185, DateTimeKind.Local).AddTicks(6150),
                            ImageId = new Guid("0fb825b6-540d-4726-a3f0-f08bf69e6fb4"),
                            IsDeleted = false,
                            Title = "Visual Studio makalesi",
                            ViewCount = 15
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01fa1372-98b1-476d-9fd5-7c3450d25139"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 7, 9, 0, 22, 27, 185, DateTimeKind.Local).AddTicks(6818),
                            IsDeleted = false,
                            Name = "ASP.net"
                        },
                        new
                        {
                            Id = new Guid("36d3c733-c838-4caa-a507-23287fbaf903"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 7, 9, 0, 22, 27, 185, DateTimeKind.Local).AddTicks(6845),
                            IsDeleted = false,
                            Name = "Visual Studio"
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38681e98-5fd8-4ad5-b318-d658f8d05913"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 7, 9, 0, 22, 27, 185, DateTimeKind.Local).AddTicks(7154),
                            FileName = "images/testimage",
                            FileType = "jpeg",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0fb825b6-540d-4726-a3f0-f08bf69e6fb4"),
                            CreatedBy = "Admin Test",
                            CreatedDate = new DateTime(2023, 7, 9, 0, 22, 27, 185, DateTimeKind.Local).AddTicks(7162),
                            FileName = "images/testimage2",
                            FileType = "png",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.HasOne("Blog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
